Testing:
  - Now I'm breaking out all of these classes. They have public interfaces that need to be tested, and they should also be stubbed. When I get through the example work, I'll implement the testing ideas layed out in Sandi Metz's Practical Object Oriented Design in Ruby and see how that plays out (stubbing, mocking, inheritance, roles and all that)

  - Going to read chapter 2 and come back to apply testing principles to the new class structure

Presentation Format:
  - Chapter 3 lists out all of the code smells, and chapter 5 onwards lists a catalogue of refactorings
    - I think that I should break out my presentations into groups of the listed code smells that are followed with their prescribed refactorings
      - Ideally, I'd like to go through our code and actually implement these prescribed refactorings
